include "UALDivisionAffDecV6.lus"

node logique <<const n:int>>(chQ, chR, chA, chB, chK : bool ; entree : bool^n)
returns( sortie : bool^n);
let
	
tel;


-- Multiplexeur 2 vers 1 -- 
function mux21(a, b, uc0 : bool)
returns (s : bool)
let 
	s = not(uc0) and a or uc0 and b;
tel;


-- Multiplexeur 4 vers 1 -- 
function mux41(a,b,c,d, uc1,uc0 : bool)
-- a,b,c,d sont les quatres entrées du multiplexeur --
returns (s: bool);
let
	s= (not(uc1) and not(uc0) and a) or (not(uc1) and uc0 and b) or (uc1 and not(uc0) and c) or (uc1 and uc0 and d);
tel;


-- Multiplexeur 4 vers 1 sur nbits --
-- Généralisation du multiplexeur 4 vers 1 sur n bits --
function mux41_nbit <<const n: int>>(A, B, C, D : bool^n ; s1,s2 :bool) 
returns (F :bool^n);
let
	F = map <<mux41 ; n>> (A, B, C, D, s1^n,s2^n);
tel;

-- Multiplexeur 2 vers 1 sur nbits --
-- Généralisation du multiplexeur 2 vers 1 sur n bits --
function mux21_nbit <<const n: int>>(A, B : bool^n ; s1 :bool) 
returns (F :bool^n);
let
	F = map <<mux21 ; n>> (A, B, s1^n);
tel;