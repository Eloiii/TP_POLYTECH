(* This file was generated by lv6 version v6.104.0. *)
(*  lv6 -ec -node incrementation -o incrementation.ec 1bit.lus *)
(* on EloiUBUNTU the 25/11/2021 at 11:10:12 *)

node incrementation(B_0:bool; B_1:bool; B_2:bool; B_3:bool) 
returns (R_0:bool; R_1:bool; R_2:bool; R_3:bool);
var
   ____split_1_4_1_2:bool;
   ____split_2_4_1_2:bool;
   ____split_3_4_1_2:bool;
   ____split_4_4_1_2:bool;
   ____split_5_4_1_2:bool;
   ___r_4_1_2:bool;
   ___cout_4_1_2:bool;
   ____split_1_3_1_2:bool;
   ____split_2_3_1_2:bool;
   ____split_3_3_1_2:bool;
   ____split_4_3_1_2:bool;
   ____split_5_3_1_2:bool;
   ___r_3_1_2:bool;
   ___cout_3_1_2:bool;
   ____split_1_2_1_2:bool;
   ____split_2_2_1_2:bool;
   ____split_3_2_1_2:bool;
   ____split_4_2_1_2:bool;
   ____split_5_2_1_2:bool;
   ___r_2_1_2:bool;
   ___cout_2_1_2:bool;
   ____split_1_1_1_2:bool;
   ____split_2_1_1_2:bool;
   ____split_3_1_1_2:bool;
   ____split_4_1_1_2:bool;
   ____split_5_1_1_2:bool;
   ___r_1_1_2:bool;
   ___cout_1_1_2:bool;
   _cin_7:bool;
   b_0:bool;
   b_1:bool;
   b_2:bool;
   b_3:bool;
let
   _cin_7 = false;
   R_0 = ___r_1_1_2;
   ____split_1_1_1_2 = (B_0) xor (b_0);
   ___r_1_1_2 = (____split_1_1_1_2) xor (_cin_7);
   ____split_5_1_1_2 = (B_0) and (_cin_7);
   ____split_4_1_1_2 = (____split_2_1_1_2) or (____split_3_1_1_2);
   ____split_3_1_1_2 = (b_0) and (_cin_7);
   ____split_2_1_1_2 = (B_0) and (b_0);
   ___cout_1_1_2 = (____split_4_1_1_2) or (____split_5_1_1_2);
   R_1 = ___r_2_1_2;
   ____split_1_2_1_2 = (B_1) xor (b_1);
   ___r_2_1_2 = (____split_1_2_1_2) xor (___cout_1_1_2);
   ____split_5_2_1_2 = (B_1) and (___cout_1_1_2);
   ____split_4_2_1_2 = (____split_2_2_1_2) or (____split_3_2_1_2);
   ____split_3_2_1_2 = (b_1) and (___cout_1_1_2);
   ____split_2_2_1_2 = (B_1) and (b_1);
   ___cout_2_1_2 = (____split_4_2_1_2) or (____split_5_2_1_2);
   R_2 = ___r_3_1_2;
   ____split_1_3_1_2 = (B_2) xor (b_2);
   ___r_3_1_2 = (____split_1_3_1_2) xor (___cout_2_1_2);
   ____split_5_3_1_2 = (B_2) and (___cout_2_1_2);
   ____split_4_3_1_2 = (____split_2_3_1_2) or (____split_3_3_1_2);
   ____split_3_3_1_2 = (b_2) and (___cout_2_1_2);
   ____split_2_3_1_2 = (B_2) and (b_2);
   ___cout_3_1_2 = (____split_4_3_1_2) or (____split_5_3_1_2);
   R_3 = ___r_4_1_2;
   ____split_1_4_1_2 = (B_3) xor (b_3);
   ___r_4_1_2 = (____split_1_4_1_2) xor (___cout_3_1_2);
   ____split_5_4_1_2 = (B_3) and (___cout_3_1_2);
   ____split_4_4_1_2 = (____split_2_4_1_2) or (____split_3_4_1_2);
   ____split_3_4_1_2 = (b_3) and (___cout_3_1_2);
   ____split_2_4_1_2 = (B_3) and (b_3);
   ___cout_4_1_2 = (____split_4_4_1_2) or (____split_5_4_1_2);
   b_0 = true;
   b_3 = false;
   b_2 = false;
   b_1 = false;
tel
-- end of node 1bit__incrementation
